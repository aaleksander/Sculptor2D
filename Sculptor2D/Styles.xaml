<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
>

<!-- Стиль для PlanItem -->
<Style TargetType="{x:Type DataGridRow}" x:Key="PlanItemStyle">
<!--    <Setter Property="Background" Value="{Binding Type, Converter={StaticResource PlanItem2Color}}" />-->
	<Setter Property="Background" Value="{Binding ColorBackgroundPlan}" />
	<Setter Property="FontWeight" Value="{Binding Type, Converter={StaticResource PlanItem2FontWeight}}" />
	<Setter Property="FontStyle" Value="{Binding Type, Converter={StaticResource PlanItem2FontStyle}}" />	
</Style>

<!-- Стиль для строк МСГ -->
<Style TargetType="{x:Type DataGridRow}" x:Key="MSGItemStyle">
    <!-- <Setter Property="Background" Value="{Binding ., Converter={StaticResource PlanItem_MSG2Color}}" /> -->
	<Setter Property="Background" Value="{Binding ColorBackground}" />
	<Setter Property="FontWeight" Value="{Binding Type, Converter={StaticResource PlanItem2FontWeight}}" />
	<Setter Property="FontStyle" Value="{Binding Type, Converter={StaticResource PlanItem2FontStyle}}" />	
</Style>

<Style TargetType="DataGridCell" x:Key="CenterAlign">
	<Setter Property="TextBlock.TextAlignment" Value="Center" />
</Style>
	
<Style TargetType="Page">
	<Setter Property="SnapsToDevicePixels" Value="True" />
	<Setter Property="TextOptions.TextFormattingMode" Value="Display" />
	<Setter Property="Background" Value="White" />
</Style>

<Style TargetType="DataGridRow">
	<Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />	
</Style>

<Style TargetType="DataGridColumnHeader" >
	<Setter Property="HorizontalContentAlignment" Value="Center" />
	
</Style>
	
<Style x:Key="CellCenter" TargetType="DataGridCell">
	<Setter Property="HorizontalAlignment" Value="Center"/>
</Style>

    <LinearGradientBrush x:Key="MouseOverListBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <!--оранжевый-->
            <!--<GradientStop Offset="0.0" Color="#FAE9C4"/>
            <GradientStop Offset="0.5" Color="#F9E5BA"/>
            <GradientStop Offset="0.51" Color="#F7DA9F"/>
            <GradientStop Offset="1.0" Color="#F4D9A3"/>-->

        	<!--зеленый-->
            <GradientStop Offset="0.0" Color="#D9FFD6"/>
            <GradientStop Offset="0.5" Color="#D9FFD6"/>
            <GradientStop Offset="0.51" Color="#CEFFCB"/>
            <GradientStop Offset="1.0" Color="#EBFFE7"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="SelectedItemListBrush"  StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <!--оранжевый-->
            <!--<GradientStop Offset="0.0" Color="#F3C667"/>
            <GradientStop Offset="0.5" Color="#F0BA4C"/>
            <GradientStop Offset="0.51" Color="#EAA008"/>
            <GradientStop Offset="1.0" Color="#E39E11"/>-->

            <GradientStop Offset="0.0" 	Color="#54b1b7"/>
            <GradientStop Offset="0.5" 	Color="#54b1b7"/>
            <GradientStop Offset="0.51" Color="#46a3a9"/>
            <GradientStop Offset="1.0" 	Color="#77c3cB"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
	
    <LinearGradientBrush x:Key="SelectedItemListBrush2"  StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <!--оранжевый-->
            <GradientStop Offset="0.0" Color="#F3C667"/>
            <GradientStop Offset="0.5" Color="#F0BA4C"/>
            <GradientStop Offset="0.51" Color="#EAA008"/>
            <GradientStop Offset="1.0" Color="#E39E11"/>

            <!--<GradientStop Offset="0.0" 	Color="#54b1b7"/>
            <GradientStop Offset="0.5" 	Color="#54b1b7"/>
            <GradientStop Offset="0.51" Color="#46a3a9"/>
            <GradientStop Offset="1.0" 	Color="#77c3cB"/>-->
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>	
   
	<Style x:Key="ColumnHeader" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Height" Value="10"/>
    </Style>
	
    <Style x:Key="CellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="TextBlock.Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0, 0, 0, 1"/>
    	<Setter Property="BorderBrush" Value="#C6D7C5" />
		<Setter Property="Template">
		    <Setter.Value>
		        <ControlTemplate TargetType="DataGridCell">
		            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" 
		                    BorderBrush="{TemplateBinding Border.BorderBrush}"		                    
		                    Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True"
		            		Padding="2"
		        	>
		                <ContentPresenter VerticalAlignment="Center"
		                                  Content="{TemplateBinding ContentControl.Content}" 
		                                  Margin="1,0,0,0"
		                                  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
		                                  ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" 
		                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
		            </Border>
		        </ControlTemplate>
		    </Setter.Value>
		</Setter>

		<Style.Triggers>
		    <Trigger Property="IsSelected" Value="True">
		        <Setter Property="Background" Value="{StaticResource SelectedItemListBrush}" />
		        <Setter Property="Foreground" Value="Black"/>
		    <!--    <Setter Property="BorderBrush" Value="Transparent" />-->
		    </Trigger>
		    <Trigger Property="DataGridRow.IsFocused" Value="True">
		       <!-- <Setter Property="BorderBrush" Value="Transparent" />-->
		    </Trigger>
		</Style.Triggers>
	</Style>
	
<Style x:Key="PlanCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource CellStyle}">
        <Setter Property="BorderThickness" Value="0, 0, 0, 1"/>
</Style>

<ControlTemplate x:Key="WaitControlTemplate">
        <TextBlock Text="Загрузка ..." HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>
</ControlTemplate>

<Style TargetType="{x:Type DataGrid}" x:Key="DataGridStyle">
    <Setter Property="AutoGenerateColumns" Value="False"/>
    <Setter Property="Background" Value="White" /> <!-- Value="#E5F1E4"/>  -->
    <Setter Property="ColumnHeaderStyle" Value="{StaticResource ColumnHeader}"/>
    <Setter Property="CellStyle" Value="{StaticResource CellStyle}"/>
    <Setter Property="HeadersVisibility" Value="Column"/>
    <Setter Property="AlternationCount" Value="2"/>
	<Setter Property="AlternatingRowBackground" Value="#f4f4f4" />
    <Setter Property="GridLinesVisibility" Value="Vertical"/>
    <Setter Property="SelectionMode" Value="Single" />
	<Setter Property="IsReadOnly" Value="True" />
    <Setter Property="ClipboardCopyMode" Value="IncludeHeader"/>
    <Setter Property="VerticalGridLinesBrush" Value="#C6D7C5"/>
	<Setter Property="HorizontalGridLinesBrush" Value="#C6D7C5"/>

    <Style.Triggers>
        <Trigger Property="ItemsSource" Value="{x:Null}">
            <Setter Property="Template" Value="{StaticResource WaitControlTemplate}" />
        </Trigger>
    </Style.Triggers>
</Style>

<Style TargetType="{x:Type DataGrid}" x:Key="PlanDataGridStyle" BasedOn="{StaticResource DataGridStyle}">
	<Setter Property="CellStyle" Value="{StaticResource PlanCellStyle}"/>
</Style>
	
<Style TargetType="{x:Type DataGridCell}" x:Key="PlanItemCellStyle" BasedOn="{StaticResource CellStyle}">
    <Setter Property="Background" Value="{Binding ColorBackgroundPlan}" />
	<Setter Property="Foreground" Value="Black" />
	<Setter Property="BorderThickness" Value="0 0 0 1" />
</Style>
	
	
    <Style x:Key="CellStyle2" TargetType="{x:Type DataGridCell}">
        <Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="TextBlock.Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0, 0, 0, 1"/>
    	<Setter Property="BorderBrush" Value="#C6D7C5" />

		<Setter Property="Template">
		    <Setter.Value>
		        <ControlTemplate TargetType="DataGridCell">
		            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" 
		                    BorderBrush="{TemplateBinding Border.BorderBrush}" 
		                    Padding="2"
		                    Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">

		                <ContentPresenter VerticalAlignment="Center"
		                                  Content="{TemplateBinding ContentControl.Content}" 
		                                  Margin="1,0,0,0"		                				
		                                  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
		                                  ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" 
		                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
		            </Border>
		        </ControlTemplate>
		    </Setter.Value>
		</Setter>

		<Style.Triggers>
		    <Trigger Property="IsSelected" Value="True">
		        <Setter Property="Background" Value="{StaticResource SelectedItemListBrush}" />
		        <Setter Property="Foreground" Value="Black"/>
		        <Setter Property="BorderBrush" Value="Transparent" />
		    </Trigger>
		    <Trigger Property="IsSelected" Value="True">
<!-- 		        <Setter Property="Background" Value="{Binding Converter={StaticResource Cell2BackGround}}" />  -->
		        <Setter Property="Foreground" Value="Black"/>
		        <Setter Property="BorderBrush" Value="Transparent" />
		    </Trigger>		
		    <Trigger Property="DataGridRow.IsFocused" Value="True">
		        <Setter Property="BorderBrush" Value="Transparent" />
		    </Trigger>
		</Style.Triggers>
	</Style>

     <Style TargetType="{x:Type DataGrid}" x:Key="DataGridStyle2">
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="Background" Value="White" /> <!-- Value="#E5F1E4"/>  -->
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource ColumnHeader}"/>
        <Setter Property="CellStyle" Value="{StaticResource CellStyle2}"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="AlternationCount" Value="2"/>
    	<Setter Property="AlternatingRowBackground" Value="#f4f4f4" />
        <Setter Property="GridLinesVisibility" Value="Vertical"/>
        <Setter Property="SelectionMode" Value="Single" />
    	<!--<Setter Property="IsReadOnly" Value="True" />-->
        <Setter Property="ClipboardCopyMode" Value="IncludeHeader"/>
        <Setter Property="VerticalGridLinesBrush" Value="#C6D7C5"/>
		<Setter Property="HorizontalGridLinesBrush" Value="#C6D7C5"/>
    </Style>

<Style TargetType="{x:Type Button}" x:Key="CommandButton">
	<Setter Property="Margin" Value="10, 3, 10, 3" />
	<Setter Property="Foreground" Value="#FF2B5176" />
	<Setter Property="Template"	>
		<Setter.Value>
			<ControlTemplate TargetType="{x:Type Button}">
				<DockPanel LastChildFill="True">
					<Ellipse Fill="#FF2B5176"
						DockPanel.Dock="Left"
						Stroke="#FF2B5176" Height="5" Width="5"/>
			          <ContentPresenter x:Name="ButtonContentPresenter"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Stretch"
					Margin="5, 0, 0, 0"
					>
<!--					<ContentPresenter.RenderTransform>
			         	<RotateTransform Angle="10"/>
			        </ContentPresenter.RenderTransform>
-->				</ContentPresenter>
				</DockPanel>
			</ControlTemplate>
		</Setter.Value>
	</Setter>
	<Style.Triggers>
	    <Trigger Property="IsEnabled" Value="False">	
			<Setter Property="Foreground" Value="#a0a0a0" />
		</Trigger>
		

		<Trigger Property="IsMouseOver" Value="True">
			<Setter Property="Foreground" Value="Red" />
		</Trigger>
	</Style.Triggers>
</Style>

<DataTemplate x:Key="MsgCellFirst">
<Grid>
	<Grid.RowDefinitions>
		<RowDefinition />
		<RowDefinition />
	</Grid.RowDefinitions>
	<Border BorderThickness="0, 0, 0, 1" Margin="-3" BorderBrush="{Binding MSGColor}">
		<TextBlock Text="план" Grid.Row="0" TextAlignment="Center" Margin="0, 3, 0, 0"/>
	</Border>
	<TextBlock Text="факт" Grid.Row="1" TextAlignment="Center" Margin="0, 3, 0, 0"/>
</Grid>
</DataTemplate>
	
<DataTemplate x:Key="MsgZeroTemplate">
	<Grid Margin="-3, -2, -2, -2">
		<Grid.RowDefinitions>
			<RowDefinition />
			
			<RowDefinition />
		</Grid.RowDefinitions>
		<Border BorderThickness="0, 0, 0, 1" Margin="0" BorderBrush="{Binding MSGColor}">
			<TextBlock Text="план" Grid.Row="0" TextAlignment="Center" Margin="0, 3, 0, 0"/>
		</Border>
		<TextBlock Text="факт" Grid.Row="1" TextAlignment="Center" Margin="0, 3, 0, 0"/>
	</Grid>
</DataTemplate>
	
<DataTemplate x:Key="MsgCellTemplate">
<Grid>
	<Grid.RowDefinitions>
		<RowDefinition/>
		<RowDefinition/>
	</Grid.RowDefinitions>
	<Border BorderThickness="0, 0, 0, 1" Margin="-3" BorderBrush="{Binding MSGColor}" Grid.Row="0">
		<TextBlock Text="1" TextAlignment="Center" Margin="0, 3, 0, 0"/>
	</Border>
	<TextBlock Text="2" Grid.Row="1" TextAlignment="Center" Margin="0, 3, 0, 0"/>
</Grid>
</DataTemplate>
	
	
<DataTemplate x:Key="MsgCellEmpty">
<Grid>
</Grid>
</DataTemplate>

<DataTemplate x:Key="ContractorCellEmpty">
	<TextBlock Text="Не указан" />
</DataTemplate>

<DataTemplate x:Key="ContractorCell">
		<TextBlock>
			<Hyperlink Command="{Binding ShowContractorCommand}" CommandParameter="{Binding}">
				<Run Text="{Binding ContractorName}"/>
			</Hyperlink>
		</TextBlock>
</DataTemplate>

</ResourceDictionary>
